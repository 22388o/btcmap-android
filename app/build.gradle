apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 39
        versionName "2.0.4"

        buildConfigField "String", "API_URL", API_URL
        buildConfigField "String", "GOOGLE_CLIENT_ID", GOOGLE_CLIENT_ID

        project.ext.set("archivesBaseName", "Coins-" + defaultConfig.versionName)

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/src/main/assets/schemas".toString()]
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEYSTORE_KEY_ALIAS
            keyPassword KEYSTORE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-dev"
        }
        release {
            signingConfig signingConfigs.release
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"

    // Android support libraries
    implementation "com.android.support:support-v13:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:customtabs:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"

    // Android architecture components
    kapt "android.arch.lifecycle:compiler:$archComponentsVersion"
    implementation "android.arch.lifecycle:extensions:$archComponentsVersion"
    implementation "android.arch.persistence.room:runtime:$archComponentsVersion"
    kapt "android.arch.persistence.room:compiler:$archComponentsVersion"
    testImplementation "android.arch.core:core-testing:$archComponentsVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$archComponentsVersion"

    // Google Play Services split client libs
    implementation "com.google.android.gms:play-services-gcm:$playServicesVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"
    implementation "com.google.firebase:firebase-core:$playServicesVersion"

    // Dependency injection
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    // Api mapping
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Map utils
    implementation "com.google.maps.android:android-maps-utils:$mapsUtilsVersion"

    // Image utils
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "de.hdodenhof:circleimageview:$circleImageViewVersion"

    // JSON utils
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Logging
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Crash reporting
    compile("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion@aar") {
        transitive = true
    }

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion" // TODO Remove

    // Android Testing Support Library's runner and rules
    androidTestImplementation("com.android.support.test:runner:$runnerVersion")
    androidTestImplementation("com.android.support.test:rules:$runnerVersion")

    // Espresso UI Testing
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoVersion")
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espressoVersion")
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:$espressoVersion")
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

apply plugin: 'com.google.gms.google-services'