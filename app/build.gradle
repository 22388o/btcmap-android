apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.bubelov.coins"

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        versionCode rootProject.versionCode
        versionName rootProject.versionName

        compileOptions {
            targetCompatibility 1.8
            sourceCompatibility 1.8
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/src/main/assets/schemas".toString()]
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        def apiUrl = project.hasProperty('API_URL') ? API_URL : System.getenv('API_URL')
        buildConfigField "String", "API_URL", apiUrl != null ? apiUrl : ""

        def googleClientId = project.hasProperty('GOOGLE_CLIENT_ID') ? GOOGLE_CLIENT_ID : System.getenv('GOOGLE_CLIENT_ID')
        buildConfigField "String", "GOOGLE_CLIENT_ID", googleClientId != null ? googleClientId : ""

        buildConfigField "Boolean", "MOCK_API", "true"

        buildConfigField "Float", "MAP_MARKER_ANCHOR_U", "$map_marker_anchor_u"
        buildConfigField "Float", "MAP_MARKER_ANCHOR_V", "$map_marker_anchor_v"

        project.ext.set("archivesBaseName", "Coins-" + defaultConfig.versionName)

        manifestPlaceholders = [crashlyticsEnabled: true]
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEYSTORE_KEY_ALIAS
            keyPassword KEYSTORE_KEY_PASSWORD
        }

        debug {
            storeFile file("../debug.keystore")
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsEnabled: false]
        }
        release {
            signingConfig signingConfigs.release
            manifestPlaceholders = [crashlyticsEnabled: true]
        }
    }
}

dependencies {
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:customtabs:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion@aar") {
        transitive = true
    }
    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.google.firebase:firebase-core:$firebaseVersion"
    implementation "com.google.maps.android:android-maps-utils:$mapsUtilsVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
    implementation "de.hdodenhof:circleimageview:$circleImageViewVersion" // TODO Remove

    androidTestImplementation "android.arch.persistence.room:testing:$roomVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$runnerVersion"
    testImplementation "android.arch.core:core-testing:$lifecycleVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

apply plugin: 'com.google.gms.google-services'