plugins {
    id "com.android.application"
    id "kotlin-android"
    id "androidx.navigation.safeargs.kotlin"
    id "com.squareup.sqldelight"
}

def signingPropertiesFile = rootProject.file("signing.properties")

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "org.btcmap"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 42
        versionName "3.0.0"
        setProperty("archivesBaseName", "btcmap-$versionName")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    packagingOptions {
        exclude 'META-INF/kotlinx-coroutines-core.kotlin_module'
    }

    signingConfigs {
        if (signingPropertiesFile.exists()) {
            play {
                def signingProperties = new Properties()
                signingProperties.load(new FileInputStream(signingPropertiesFile))
                storeFile file(signingProperties['playKeystoreFile'])
                storePassword signingProperties['playKeystorePassword']
                keyAlias signingProperties['playKeyAlias']
                keyPassword signingProperties['playKeyPassword']
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".dev"
        }

        if (signingPropertiesFile.exists()) {
            play {
                def signingProperties = new Properties()
                signingProperties.load(new FileInputStream(signingPropertiesFile))
                signingConfig signingConfigs.play
            }
        }
    }

    buildFeatures {
        viewBinding = true
    }

    lintOptions {
        disable 'VectorPath'
        abortOnError false
        // TODO Unexpected failure during lint analysis of ModuleTests.kt (this is a bug in lint or one of the libraries it depends on)
    }
}

dependencies {
    // Kotlin extensions
    // Simplifies non-blocking programming
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1")

    // Android extensions
    implementation("androidx.core:core-ktx:1.7.0")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1")
    def navVer = "2.4.2"
    implementation("androidx.navigation:navigation-fragment-ktx:$navVer")
    implementation("androidx.navigation:navigation-ui-ktx:$navVer")
    implementation("androidx.constraintlayout:constraintlayout:2.1.3")
    implementation("androidx.browser:browser:1.4.0")
    implementation("androidx.work:work-runtime-ktx:2.7.1")

    // Retrofit turns HTTP APIs into Java interfaces
    // Used to communicate with remote backends
    def retrofitVer = "2.9.0"
    implementation("com.squareup.retrofit2:retrofit:$retrofitVer")
    implementation("com.squareup.retrofit2:converter-gson:$retrofitVer")

    // Modern HTTP client
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.3"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // SQLDelight generates typesafe kotlin APIs from SQL statements
    def sqlDelightVer = "1.5.3"
    implementation("com.squareup.sqldelight:coroutines-extensions:$sqlDelightVer")
    implementation("com.squareup.sqldelight:android-driver:$sqlDelightVer")

    implementation("io.insert-koin:koin-android:3.2.0-beta-1")
    implementation("com.google.android.material:material:1.7.0-alpha01")
    implementation("org.osmdroid:osmdroid-android:6.1.11")
    implementation("com.google.code.gson:gson:2.9.0")
}
